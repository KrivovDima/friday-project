{"version":3,"sources":["components/Profile/Profile.module.css","components/PasswordRecovery/checkEmail/checkEmail.module.css","components/PasswordRecovery/passwordRecovery.module.css","api/instanceAPI.ts","api/login-api.tsx","store/loginReducer.ts","components/Login/Login.tsx","api/passwordRecoveryAPI.ts","store/passwordRecoveryReducer.ts","components/PasswordRecovery/PasswordRecovery.tsx","img/envelope-open.svg","components/PasswordRecovery/checkEmail/CheckEmail.tsx","components/Profile/Profile.tsx","api/registrationAPI.ts","store/registrationReducer.ts","components/Registration/Registration.tsx","store/inputNewPasswordReducer.ts","components/InputNewPassword/InputNewPassword.tsx","App.tsx","reportWebVitals.ts","store/profileReducer.ts","store/store.ts","index.tsx","components/Login/Login.module.css","components/Registration/Registration.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","loginApi","data","post","delete","initialState","isLoggedIn","userData","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","setError","payload","type","Login","dispatch","useDispatch","useSelector","state","login","useForm","register","handleSubmit","errors","formState","to","className","s","wrapper","title","signIn","formContainer","onSubmit","a","response","isAxiosError","loginTC","inputWrapper","errorMassage","message","description","htmlFor","placeholder","required","pattern","value","password","minLength","rememberMeWrapper","defaultChecked","forgotPass","serverError","mainButton","withoutAcc","signUp","passwordRecoveryAPI","resetPasswordToken","status","setStatusPasswordRecovery","setEmail","PasswordRecovery","messageForEmail","style","href","statusRecovery","passwordRecovery","errorRecovery","mode","forgot","id","remember","tryLogin","CheckEmail","src","icon","alt","check","Profile","width","onClick","registrationAPI","changeStatusRegistration","Registration","navigate","useNavigate","statusRegistration","registration","errorRegistration","watch","passwordValue","styles","box","subTitle","form","input","errorInput","validate","confirmPassword","btns","btn","disabled","errorBox","setNewPasswordStatus","InputNewPassword","token","useParams","statusNewPassword","inputNewPassword","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","copyState","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84041757.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__MdkTK\",\"title\":\"Profile_title__d6ebg\",\"userData\":\"Profile_userData__iEnCU\",\"mainButton\":\"Profile_mainButton__1e_19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"checkEmail_wrapper__1kLUM\",\"title\":\"checkEmail_title__pHncS\",\"check\":\"checkEmail_check__3N_jl\",\"mainButton\":\"checkEmail_mainButton__2xIg_\",\"description\":\"checkEmail_description__wVFwY\",\"icon\":\"checkEmail_icon__1JGiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"passwordRecovery_wrapper__324Hv\",\"title\":\"passwordRecovery_title__BonNo\",\"forgot\":\"passwordRecovery_forgot__1dNCo\",\"formContainer\":\"passwordRecovery_formContainer__VVmW6\",\"description\":\"passwordRecovery_description__PgwlF\",\"mainButton\":\"passwordRecovery_mainButton__2PDey\",\"remember\":\"passwordRecovery_remember__18QAH\",\"tryLogin\":\"passwordRecovery_tryLogin__3bYz2\",\"error\":\"passwordRecovery_error__21nhZ\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n});","import {AxiosResponse} from 'axios';\r\nimport {instance} from \"./instanceAPI\";\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype LogoutResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n// type LoginResponseType = {\r\n//     _id: string\r\n//     email: string\r\n//     name: string\r\n//     avatar?: string\r\n//     publicCardPacksCount: number\r\n//     created: Date | null\r\n//     updated: Date | null\r\n//     isAdmin: boolean\r\n//     verified: boolean\r\n//     rememberMe: boolean\r\n//     error?: string\r\n//     deviceTokens: any\r\n//     token: string\r\n//     __v: number\r\n//\r\n// }\r\n\r\n\r\nexport const loginApi = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    me() {\r\n        return instance.post('auth/me')\r\n    },\r\n    logout() {\r\n        return instance.delete<AxiosResponse<LogoutResponseType>>('auth/me')\r\n    }\r\n}","import axios from 'axios';\r\nimport {Dispatch} from 'redux'\r\nimport {loginApi, LoginParamsType} from '../api/login-api';\r\n\r\ntype UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    userData: UserDataType\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    userData: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: '',\r\n    }\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.payload.isLoggedIn, userData: {...action.payload.userData}};\r\n        case 'SET-IS-LOGGED-OUT':\r\n            return {...state, isLoggedIn: action.payload.isLoggedIn, userData: {...initialState.userData}};\r\n        case 'SET-ERROR':\r\n            const copyState = {...state}\r\n            copyState.userData.error = action.payload.error\r\n            return copyState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setIsLoggedIn = (payload: { isLoggedIn: boolean, userData: UserDataType }) => ({\r\n    type: 'SET-IS-LOGGED-IN',\r\n    payload\r\n} as const)\r\nexport const setIsLoggedOut = (payload: { isLoggedIn: boolean }) => ({type: 'SET-IS-LOGGED-OUT', payload} as const)\r\nexport const setError = (payload: { isLoggedIn: boolean, error: string }) => ({type: 'SET-ERROR', payload} as const)\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setError({isLoggedIn: false, error: ''}))\r\n        const response = await loginApi.login(data)\r\n        dispatch(setIsLoggedIn({isLoggedIn: true, userData: {...response.data}}))\r\n    } catch (e) {\r\n        if (axios.isAxiosError(e) && e.response) {\r\n            dispatch(setError({isLoggedIn: false, error: e.response.data.error}))\r\n            dispatch(setError({isLoggedIn: false, error: 'some error occurred'}))\r\n        }\r\n    }\r\n}\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n    await loginApi.logout()\r\n    dispatch(setIsLoggedOut({isLoggedIn: false}))\r\n}\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setIsLoggedOut>\r\n    | ReturnType<typeof setError>","import React from 'react';\r\nimport {useForm, SubmitHandler} from 'react-hook-form';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './Login.module.css'\r\nimport {loginTC} from '../../store/loginReducer';\r\nimport {AppRootStateType} from '../../store/store';\r\nimport {Navigate} from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype Inputs = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n};\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector((state: AppRootStateType) => state.login.isLoggedIn)\r\n    const error = useSelector((state: AppRootStateType) => state.login.userData.error)\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm<Inputs>();\r\n    const onSubmit: SubmitHandler<Inputs> = data => dispatch(loginTC(data));\r\n\r\n    // {email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false} for tests\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>It-incubator</div>\r\n            <div className={s.signIn}>Sign in</div>\r\n            <form className={s.formContainer} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.inputWrapper}>\r\n                    {errors.email ? <span className={s.errorMassage}>{errors.email.message}</span> :\r\n                        <label className={s.description} htmlFor=\"email\">Email</label>}\r\n                    <input type=\"text\"\r\n                           placeholder={'enter your e-mail'}\r\n                           {...register('email', {\r\n                               required: true,\r\n                               pattern: {\r\n                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                   message: 'Invalid email address'\r\n                               }\r\n                           })}/>\r\n                </div>\r\n                <div className={s.inputWrapper}>\r\n                    {errors.password ? <span className={s.errorMassage}>{errors.password.message}</span> :\r\n                        <label className={s.description} htmlFor=\"password\">Password</label>}\r\n                    <input type=\"password\"\r\n                           placeholder={'enter your password'}\r\n                           {...register('password', {\r\n                               required: true,\r\n                               minLength: {\r\n                                   value: 8,\r\n                                   message: 'Password must have at least 8 characters'\r\n                               }\r\n                           })}/>\r\n                </div>\r\n                <div className={s.rememberMeWrapper}>\r\n                    <label className={s.rememberMe}>\r\n                        <input type=\"checkbox\" defaultChecked={false}\r\n                               {...register('rememberMe', {required: false})}/>\r\n                        Remember Me\r\n                    </label>\r\n                </div>\r\n                <NavLink to={'/passwordRecovery'} className={s.forgotPass}>Forgot Password</NavLink>\r\n                {error && <span className={`${s.errorMassage} ${s.serverError}`}>Connection error: {error}</span>}\r\n                <button type={'submit'} className={s.mainButton}>Login</button>\r\n            </form>\r\n            <span className={s.withoutAcc}>Don't have an account?</span>\r\n            <NavLink to={'/registration'} className={s.signUp}>Sign Up</NavLink>\r\n        </div>\r\n    )\r\n}","import {instance} from \"./instanceAPI\";\r\n\r\ntype RecoveryResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport const passwordRecoveryAPI = {\r\n    passRecovery(email: string, message: () => JSX.Element) {\r\n        return instance.post<RecoveryResponseType>('auth/forgot', {email, message});\r\n    },\r\n    inputNewPass(password: string, resetPasswordToken: string | undefined) {\r\n        return instance.post<RecoveryResponseType>('auth/set-new-password', {password, resetPasswordToken})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryAPI} from \"../api/passwordRecoveryAPI\";\r\nimport axios from \"axios\";\r\n\r\nexport type RecoveryStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n    email: string\r\n    status: RecoveryStatusType\r\n    error: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    email: '',\r\n    status: \"idle\",\r\n    error: '',\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setStatusPasswordRecovery> |\r\n    ReturnType<typeof setErrorPasswordRecovery> |\r\n    ReturnType<typeof setEmail>\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_STATUS_PASSWORD_RECOVERY': {\r\n            return {...state, ...action.payload};\r\n        }\r\n        case 'SET_ERROR_PASSWORD_RECOVERY': {\r\n            return {...state, ...action.payload};\r\n        }\r\n        case 'SET_EMAIL': {\r\n            return {...state, ...action.payload};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setStatusPasswordRecovery = (status: RecoveryStatusType) => ({\r\n    type: 'SET_STATUS_PASSWORD_RECOVERY',\r\n    payload: {status}\r\n} as const);\r\nexport const setErrorPasswordRecovery = (error: string) => ({\r\n    type: 'SET_ERROR_PASSWORD_RECOVERY',\r\n    payload: {error}\r\n} as const);\r\nexport const setEmail = (email: string) => ({\r\n    type: 'SET_EMAIL',\r\n    payload: {email}\r\n} as const);\r\n\r\nexport const passwordRecovery = (email: string, message: () => JSX.Element) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(setStatusPasswordRecovery(\"loading\"));\r\n        await passwordRecoveryAPI.passRecovery(email, message);\r\n        dispatch(setStatusPasswordRecovery(\"succeeded\"));\r\n        dispatch((setEmail(email)))\r\n    } catch (e) {\r\n        if(axios.isAxiosError(e) && e.response) {\r\n            dispatch(setStatusPasswordRecovery(\"failed\"));\r\n            dispatch(setErrorPasswordRecovery(e.response.data.error))\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport s from './passwordRecovery.module.css'\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {passwordRecovery, RecoveryStatusType} from \"../../store/passwordRecoveryReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype InputType = {\r\n    email: string\r\n}\r\n\r\nfunction PasswordRecovery() {\r\n\r\n    const messageForEmail = () => {\r\n        return <div style={{'backgroundColor': 'lime', 'padding': '15px'}}>\r\n            password recovery link:\r\n            <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n        </div>\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const statusRecovery = useSelector<AppRootStateType, RecoveryStatusType>(state => state.passwordRecovery.status);\r\n    const errorRecovery = useSelector<AppRootStateType, string>(state => state.passwordRecovery.error);\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm<InputType>({mode: \"onBlur\"});\r\n    const onSubmit: SubmitHandler<InputType> = data => {\r\n        dispatch(passwordRecovery(data.email, messageForEmail))\r\n    };\r\n\r\n    if(statusRecovery === 'succeeded') {\r\n        return <Navigate to={'/checkEmail'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrapper}>\r\n                <div className={s.title}>It-incubator</div>\r\n                <div className={s.forgot}>Forgot your password?</div>\r\n                <form className={s.formContainer} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <label className={s.description} htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\"\r\n                               id=\"email\"\r\n                               placeholder={'enter your e-mail'}\r\n                               {...register(\"email\", {\r\n                                   required: {value: true, message: 'Email is required'},\r\n                                   pattern: {\r\n                                       value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                       message: 'Invalid email'\r\n                                   },\r\n                               })}/>\r\n                        {errors.email && <div className={s.error}>{errors.email.message}</div>}\r\n                        <label className={s.description} htmlFor=\"email\">Enter your email address and we will send you further instructions </label>\r\n                    </div>\r\n                    <div>{statusRecovery === \"loading\" ? \"loading\" : \"\"}</div>\r\n                    <button className={s.mainButton} type=\"submit\">Send Instructions</button>\r\n                    {errorRecovery}\r\n                </form>\r\n                <span className={s.remember}>Did you remember your password?</span>\r\n\r\n                <NavLink to={'/login'} className={s.tryLogin}>Try logging in</NavLink>\r\n\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;","export default __webpack_public_path__ + \"static/media/envelope-open.d47a5acf.svg\";","import React from 'react';\r\nimport s from \"./checkEmail.module.css\";\r\nimport icon from './../../../img/envelope-open.svg'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\n\r\nconst CheckEmail = () => {\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.passwordRecovery.email);\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>It-incubator</div>\r\n            <img src={icon} alt=\"icon\" className={s.icon}/>\r\n            <div className={s.check}>Check Email</div>\r\n            <span className={s.description}>We’ve sent an Email with instructions to {email}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckEmail;","import {useDispatch, useSelector} from 'react-redux';\r\nimport s from './Profile.module.css'\r\nimport {logoutTC} from '../../store/loginReducer';\r\nimport {AppRootStateType} from '../../store/store';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: AppRootStateType) => state.login.isLoggedIn)\r\n    const userData = useSelector((state: AppRootStateType) => state.login.userData)\r\n\r\n    const onLogout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>Profile</div>\r\n            <span className={s.userData}>User Name: {userData.name}</span>\r\n            <span className={s.userData}>User Email: {userData.email}</span>\r\n            <span className={s.userData}><img alt='avatar' style={{width: '150px'}} src={userData.avatar}/></span>\r\n            <span className={s.userData}>Cards Count: {userData.publicCardPacksCount}</span>\r\n            <span className={s.userData}>Created: {userData.created}</span>\r\n            <span className={s.userData}>Last Updated: {userData.updated}</span>\r\n            {userData.isAdmin && <span className={s.userData}>Administrator</span>}\r\n            <button className={s.mainButton} onClick={onLogout}>Logout</button>\r\n        </div>\r\n    )\r\n}","import {instance} from \"./instanceAPI\";\r\n\r\nexport const registrationAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n    },\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\n// export type RegisterErrorType = {\r\n//     emailRegExp: {}\r\n//     error: string\r\n//     in: string\r\n//     isEmailValid: boolean\r\n//     isPassValid: boolean\r\n//     passwordRegExp: string\r\n// }","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../api/registrationAPI\";\r\nimport axios from 'axios';\r\n\r\nexport type RegistrationStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n    status: RegistrationStatusType\r\n    error: string\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof changeStatusRegistration> | ReturnType<typeof setErrorRegistration>\r\n\r\nconst initialState: InitialStateType = {\r\n    status: \"idle\",\r\n    error: '',\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CHANGE-STATUS-REGISTRATION\": {\r\n            return {...state, ...action.payload};\r\n        }\r\n        case \"SET-ERROR-REGISTRATION\": {\r\n            return {...state, ...action.payload};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n// action creators\r\nexport const changeStatusRegistration = (status: RegistrationStatusType) => ({\r\n    type: 'CHANGE-STATUS-REGISTRATION',\r\n    payload: {status}\r\n} as const);\r\nexport const setErrorRegistration = (error: string) => ({type: 'SET-ERROR-REGISTRATION', payload: {error}} as const);\r\n\r\n// thunk creators\r\nexport const registration = (email: string, password: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(changeStatusRegistration(\"loading\"));\r\n        await registrationAPI.register(email, password);\r\n        dispatch(changeStatusRegistration(\"succeeded\"));\r\n    } catch (e) {\r\n        if (axios.isAxiosError(e) && e.response) {\r\n            dispatch(changeStatusRegistration(\"failed\"));\r\n            dispatch(setErrorRegistration(e.response.data.error));\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styles from './Registration.module.css';\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeStatusRegistration, registration, RegistrationStatusType} from \"../../store/registrationReducer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\ntype InputsType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n}\r\n\r\nfunction Registration() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const statusRegistration = useSelector<AppRootStateType, RegistrationStatusType>(state => state.registration.status);\r\n    const errorRegistration = useSelector<AppRootStateType, string>(state => state.registration.error);\r\n\r\n    const {register, handleSubmit, watch, formState: {errors}} = useForm<InputsType>({mode: \"onSubmit\"});\r\n    const passwordValue = watch(\"password\");\r\n    const onSubmit: SubmitHandler<InputsType> = data => dispatch(registration(data.email, data.password));\r\n\r\n    if (statusRegistration === \"succeeded\") {\r\n        dispatch(changeStatusRegistration(\"idle\"));\r\n        navigate('/login');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.box}>\r\n                <h2 className={styles.title}>It-incubator</h2>\r\n                <h3 className={styles.subTitle}>Sign Up</h3>\r\n                <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={styles.inputWrapper}>\r\n                        <input placeholder='Email'\r\n                               className={styles.input}\r\n                               type=\"text\"\r\n                               {...register(\"email\", {\r\n                                   required: {value: true, message: 'Email is required'},\r\n                                   pattern: {\r\n                                       value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                       message: 'Invalid email'\r\n                                   },\r\n                               })}/>\r\n                        {errors.email && <div className={styles.errorInput}>{errors.email.message}</div>}\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <input placeholder='Password'\r\n                               className={styles.input}\r\n                               type=\"password\"\r\n                               {...register(\"password\", {\r\n                                   required: {value: true, message: 'Password is required'},\r\n                                   minLength: {value: 8, message: 'Password must be more than 7 characters'},\r\n                               })}/>\r\n                        {errors.password && <div className={styles.errorInput}>{errors.password.message}</div>}\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <input placeholder='Confirm password'\r\n                               className={styles.input}\r\n                               type=\"password\"\r\n                               {...register(\"confirmPassword\", {\r\n                                   required: {value: true, message: 'Confirm password is required'},\r\n                                   validate: value => value === passwordValue || 'Password mismatch',\r\n                               })}/>\r\n                        {errors.confirmPassword && <div className={styles.errorInput}>{errors.confirmPassword.message}</div>}\r\n                    </div>\r\n                    <div className={styles.btns}>\r\n                        <button onClick={() => {navigate('/')}}\r\n                                className={styles.btn}>Cancel\r\n                        </button>\r\n                        <div>{statusRegistration === \"loading\" ? \"loading\" : \"\"}</div>\r\n                        <button disabled={statusRegistration === \"loading\"} type=\"submit\">Register</button>\r\n                    </div>\r\n                    <div className={styles.errorBox}>{errorRegistration}</div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;","import {RecoveryStatusType} from \"./passwordRecoveryReducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {passwordRecoveryAPI} from \"../api/passwordRecoveryAPI\";\r\nimport axios from \"axios\";\r\n\r\ntype InitialStateType = {\r\n  status: RecoveryStatusType\r\n  error: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n  status: \"idle\",\r\n  error: '',\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setNewPasswordStatus> | ReturnType<typeof setError>\r\n\r\nexport const inputNewPasswordReducer = (state= initialState, action: any) => {\r\n  switch (action.type) {\r\n    case 'SET_NEW_PASSWORD_STATUS': {\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'SET_ERROR': {\r\n      return {...state, ...action.payload};\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setNewPasswordStatus = (status: RecoveryStatusType) => ({\r\n  type: 'SET_NEW_PASSWORD_STATUS',\r\n  payload: {status}\r\n} as const);\r\nexport const setError = (error: string) => ({\r\n  type: 'SET_ERROR',\r\n  payload: {error}\r\n} as const);\r\n\r\nexport const inputNewPassword = (password: string, resetPasswordToken: string | undefined) => async (dispatch: Dispatch<ActionsType>) => {\r\n  try {\r\n    dispatch(setNewPasswordStatus(\"loading\"));\r\n    await passwordRecoveryAPI.inputNewPass(password, resetPasswordToken);\r\n    dispatch(setNewPasswordStatus(\"succeeded\"));\r\n  } catch (e) {\r\n    if(axios.isAxiosError(e) && e.response) {\r\n      dispatch(setNewPasswordStatus(\"failed\"));\r\n      dispatch(setError(e.response.data.error))\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport s from \"../PasswordRecovery/passwordRecovery.module.css\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {RecoveryStatusType} from \"../../store/passwordRecoveryReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {inputNewPassword} from \"../../store/inputNewPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\n\r\ntype InputType = {\r\n    password: string\r\n}\r\n\r\nfunction InputNewPassword() {\r\n\r\n    const {token} = useParams<string>()\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const statusNewPassword = useSelector<AppRootStateType, RecoveryStatusType>(state => state.inputNewPassword.status);\r\n    const error = useSelector<AppRootStateType, string>(state => state.inputNewPassword.error);\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm<InputType>({mode: \"onBlur\"});\r\n    const onSubmit: SubmitHandler<InputType> = data => {\r\n        dispatch(inputNewPassword(data.password, token))\r\n    };\r\n\r\n    if(statusNewPassword === 'succeeded') {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>It-incubator</div>\r\n            <div className={s.forgot}>Create new password</div>\r\n            <form className={s.formContainer} onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <input placeholder='Password'\r\n                           type=\"password\"\r\n                           {...register(\"password\", {\r\n                               required: {value: true, message: 'Password is required'},\r\n                               minLength: {value: 4, message: 'Password must be more than 7 characters'},\r\n                           })}/>\r\n                    {errors.password && <div className={s.error}>{errors.password.message}</div>}\r\n                    <label className={s.description} htmlFor=\"email\">Create new password and we will send you further\r\n                        instructions to email</label>\r\n                </div>\r\n                <div>{statusNewPassword === \"loading\" ? \"loading\" : \"\"}</div>\r\n                <button className={s.mainButton} type=\"submit\">Create new password</button>\r\n                {error}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputNewPassword;","import React from 'react';\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Login} from './components/Login/Login';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport TestPage from './components/TestPage/TestPage';\r\nimport CheckEmail from './components/PasswordRecovery/checkEmail/CheckEmail';\r\nimport {Profile} from './components/Profile/Profile';\r\nimport Registration from './components/Registration/Registration';\r\nimport InputNewPassword from './components/InputNewPassword/InputNewPassword';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"AppInner\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Login/>}/>\r\n                    <Route path=\"login\" element={<Login/>}/>\r\n                    <Route path=\"passwordRecovery\" element={<PasswordRecovery/>}/>\r\n                    <Route path=\"profile\" element={<Profile/>}/>\r\n                    <Route path=\"registration\" element={<Registration/>}/>\r\n                    <Route path=\"set-new-password/:token\" element={<InputNewPassword/>}/>\r\n                    <Route path=\"checkEmail\" element={<CheckEmail/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {}\r\n\r\nexport const profileReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {inputNewPasswordReducer} from \"./inputNewPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"./passwordRecoveryReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  inputNewPassword: inputNewPasswordReducer,\r\n  login: loginReducer,\r\n  passwordRecovery: passwordRecoveryReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n});\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2ZkLf\",\"title\":\"Login_title__3lJZC\",\"signIn\":\"Login_signIn__23srS\",\"formContainer\":\"Login_formContainer__3ItoS\",\"description\":\"Login_description__2FVD7\",\"inputWrapper\":\"Login_inputWrapper__Wj2B4\",\"rememberMe\":\"Login_rememberMe__2pJq1\",\"forgotPass\":\"Login_forgotPass__3bytk\",\"mainButton\":\"Login_mainButton__DcoTP\",\"withoutAcc\":\"Login_withoutAcc__N3M72\",\"signUp\":\"Login_signUp__3BiXw\",\"errorMassage\":\"Login_errorMassage__1dwaw\",\"serverError\":\"Login_serverError__4dBbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__1-jTi\",\"box\":\"Registration_box__3kZIC\",\"title\":\"Registration_title__2L5zK\",\"subTitle\":\"Registration_subTitle__1S3-Y\",\"form\":\"Registration_form__1JAle\",\"inputWrapper\":\"Registration_inputWrapper__HOiur\",\"input\":\"Registration_input__4mr9p\",\"btns\":\"Registration_btns__2q13J\",\"btn\":\"Registration_btn__2tGZT\",\"errorInput\":\"Registration_errorInput__WkCRE\",\"errorBox\":\"Registration_errorBox__5by_C\"};"],"sourceRoot":""}